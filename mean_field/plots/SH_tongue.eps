%!PS-Adobe-2.0 EPSF-2.0
%%Title: SH_tongue.eps
%%Creator: gnuplot 5.4 patchlevel 2
%%CreationDate: Sat Mar 30 21:51:32 2024
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 1130 806
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 35.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -333 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 1130 50 lineto 1130 806 lineto 50 806 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (SH_tongue.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 30 21:51:32 2024)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 1000 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 21600.00 15120.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
4800 4000 M
126 0 V
stroke
4200 4000 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.22)]
] -300.0 MRshow
/Helvetica findfont 1000 scalefont setfont
/vshift -333 def
1.000 UL
LTb
LCb setrgbcolor
4800 6023 M
126 0 V
stroke
4200 6023 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.225)]
] -300.0 MRshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4800 8047 M
126 0 V
stroke
4200 8047 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.23)]
] -300.0 MRshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4800 10070 M
126 0 V
stroke
4200 10070 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.235)]
] -300.0 MRshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4800 12094 M
126 0 V
stroke
4200 12094 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.24)]
] -300.0 MRshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4800 14117 M
126 0 V
stroke
4200 14117 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.245)]
] -300.0 MRshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4814 4000 M
0 126 V
stroke
4814 3000 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.46)]
] -300.0 MCshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
7691 4000 M
0 126 V
stroke
7691 3000 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.48)]
] -300.0 MCshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
10567 4000 M
0 126 V
stroke
10567 3000 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.5)]
] -300.0 MCshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
13444 4000 M
0 126 V
stroke
13444 3000 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.52)]
] -300.0 MCshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
16320 4000 M
0 126 V
stroke
16320 3000 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.54)]
] -300.0 MCshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
19197 4000 M
0 126 V
stroke
19197 3000 M
[ [(Helvetica) 900.0 0.0 true true 0 ( 0.56)]
] -300.0 MCshow
/Helvetica findfont 1000 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
4800 14117 N
0 -10117 V
14397 0 V
0 10117 V
-14397 0 V
Z stroke
5.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
450 9058 M
[ [(Symbol) 900.0 0.0 true true 0 (k)]
[(Helvetica) 720.0 -270.0 true true 0 (1)]
] -210.0 MCshow
/Helvetica findfont 1000 scalefont setfont
LTb
LCb setrgbcolor
11998 1500 M
[ [(Helvetica) 900.0 0.0 true true 0 (n)]
] -300.0 MCshow
/Helvetica findfont 1000 scalefont setfont
LTb
% Begin plot #1
5.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
5102 13712 Pls
5246 13308 Pls
5246 13712 Pls
5390 12903 Pls
5390 13308 Pls
5390 13712 Pls
5534 12094 Pls
5534 12498 Pls
5534 12903 Pls
5534 13308 Pls
5534 13712 Pls
5677 12094 Pls
5677 12498 Pls
5677 12903 Pls
5677 13308 Pls
5677 13712 Pls
5821 11689 Pls
5821 12094 Pls
5821 12498 Pls
5821 12903 Pls
5821 13308 Pls
5821 13712 Pls
5965 11284 Pls
5965 11689 Pls
5965 12094 Pls
5965 12498 Pls
5965 12903 Pls
5965 13308 Pls
5965 13712 Pls
6109 10880 Pls
6109 11284 Pls
6109 11689 Pls
6109 12094 Pls
6109 12498 Pls
6109 12903 Pls
6109 13308 Pls
6109 13712 Pls
6253 10475 Pls
6253 10880 Pls
6253 11284 Pls
6253 11689 Pls
6253 12094 Pls
6253 12498 Pls
6253 12903 Pls
6253 13308 Pls
6253 13712 Pls
6396 10070 Pls
6396 10475 Pls
6396 10880 Pls
6396 11284 Pls
6396 11689 Pls
6396 12094 Pls
6396 12498 Pls
6396 12903 Pls
6396 13308 Pls
6396 13712 Pls
6540 9666 Pls
6540 10070 Pls
6540 10475 Pls
6540 10880 Pls
6540 11284 Pls
6540 11689 Pls
6540 12094 Pls
6540 12498 Pls
6540 12903 Pls
6540 13308 Pls
6540 13712 Pls
6684 9261 Pls
6684 9666 Pls
6684 10070 Pls
6684 10475 Pls
6684 10880 Pls
6684 11284 Pls
6684 11689 Pls
6684 12094 Pls
6684 12498 Pls
6684 12903 Pls
6684 13308 Pls
6684 13712 Pls
6828 8856 Pls
6828 9261 Pls
6828 9666 Pls
6828 10070 Pls
6828 10475 Pls
6828 10880 Pls
6828 11284 Pls
6828 11689 Pls
6828 12094 Pls
6828 12498 Pls
6828 12903 Pls
6828 13308 Pls
6828 13712 Pls
6972 8856 Pls
6972 9261 Pls
6972 9666 Pls
6972 10070 Pls
6972 10475 Pls
6972 10880 Pls
6972 11284 Pls
6972 11689 Pls
6972 12094 Pls
6972 12498 Pls
6972 12903 Pls
6972 13308 Pls
6972 13712 Pls
7116 8451 Pls
7116 8856 Pls
7116 9261 Pls
7116 9666 Pls
7116 10070 Pls
7116 10475 Pls
7116 10880 Pls
7116 11284 Pls
7116 11689 Pls
7116 12094 Pls
7116 12498 Pls
7116 12903 Pls
7116 13308 Pls
7116 13712 Pls
7259 8047 Pls
7259 8451 Pls
7259 8856 Pls
7259 9261 Pls
7259 9666 Pls
7259 10070 Pls
7259 10475 Pls
7259 10880 Pls
7259 11284 Pls
7259 11689 Pls
7259 12094 Pls
7259 12498 Pls
7259 12903 Pls
7259 13308 Pls
7259 13712 Pls
7403 7642 Pls
7403 8047 Pls
7403 8451 Pls
7403 8856 Pls
7403 9261 Pls
7403 9666 Pls
7403 10070 Pls
7403 10475 Pls
7403 10880 Pls
7403 11284 Pls
7403 11689 Pls
7403 12094 Pls
7403 12498 Pls
7403 12903 Pls
7403 13308 Pls
7403 13712 Pls
7547 7642 Pls
7547 8047 Pls
7547 8451 Pls
7547 8856 Pls
7547 9261 Pls
7547 9666 Pls
7547 10070 Pls
7547 10475 Pls
7547 10880 Pls
7547 11284 Pls
7547 11689 Pls
7547 12094 Pls
7547 12498 Pls
7547 12903 Pls
7547 13308 Pls
7547 13712 Pls
7691 7237 Pls
7691 7642 Pls
7691 8047 Pls
7691 8451 Pls
7691 8856 Pls
7691 9261 Pls
7691 9666 Pls
7691 10070 Pls
7691 10475 Pls
7691 10880 Pls
7691 11284 Pls
7691 11689 Pls
7691 12094 Pls
7691 12498 Pls
7691 12903 Pls
7691 13308 Pls
7691 13712 Pls
7835 6833 Pls
7835 7237 Pls
7835 7642 Pls
7835 8047 Pls
7835 8451 Pls
7835 8856 Pls
7835 9261 Pls
7835 9666 Pls
7835 10070 Pls
7835 10475 Pls
7835 10880 Pls
7835 11284 Pls
7835 11689 Pls
7835 12094 Pls
7835 12498 Pls
7835 12903 Pls
7835 13308 Pls
7835 13712 Pls
7979 6833 Pls
7979 7237 Pls
7979 7642 Pls
7979 8047 Pls
7979 8451 Pls
7979 8856 Pls
7979 9261 Pls
7979 9666 Pls
7979 10070 Pls
7979 10475 Pls
7979 10880 Pls
7979 11284 Pls
7979 11689 Pls
7979 12094 Pls
7979 12498 Pls
7979 12903 Pls
7979 13308 Pls
7979 13712 Pls
8122 6833 Pls
8122 7237 Pls
8122 7642 Pls
8122 8047 Pls
8122 8451 Pls
8122 8856 Pls
8122 9261 Pls
8122 9666 Pls
8122 10070 Pls
8122 10475 Pls
8122 10880 Pls
8122 11284 Pls
8122 11689 Pls
8122 12094 Pls
8122 12498 Pls
8122 12903 Pls
8122 13308 Pls
8122 13712 Pls
8266 6428 Pls
8266 6833 Pls
8266 7237 Pls
8266 7642 Pls
8266 8047 Pls
8266 8451 Pls
8266 8856 Pls
8266 9261 Pls
8266 9666 Pls
8266 10070 Pls
8266 10475 Pls
8266 10880 Pls
8266 11284 Pls
8266 11689 Pls
8266 12094 Pls
8266 12498 Pls
8266 12903 Pls
8266 13308 Pls
8266 13712 Pls
8410 6428 Pls
8410 6833 Pls
8410 7237 Pls
8410 7642 Pls
8410 8047 Pls
8410 8451 Pls
8410 8856 Pls
8410 9261 Pls
8410 9666 Pls
8410 10070 Pls
8410 10475 Pls
8410 10880 Pls
8410 11284 Pls
8410 11689 Pls
8410 12094 Pls
8410 12498 Pls
8410 12903 Pls
8410 13308 Pls
8410 13712 Pls
8554 6023 Pls
8554 6428 Pls
8554 6833 Pls
8554 7237 Pls
8554 7642 Pls
8554 8047 Pls
8554 8451 Pls
8554 8856 Pls
8554 9261 Pls
8554 9666 Pls
8554 10070 Pls
8554 10475 Pls
8554 10880 Pls
8554 11284 Pls
8554 11689 Pls
8554 12094 Pls
8554 12498 Pls
8554 12903 Pls
8554 13308 Pls
8554 13712 Pls
8698 6023 Pls
8698 6428 Pls
8698 6833 Pls
8698 7237 Pls
8698 7642 Pls
8698 8047 Pls
8698 8451 Pls
8698 8856 Pls
8698 9261 Pls
8698 9666 Pls
8698 10070 Pls
8698 10475 Pls
8698 10880 Pls
8698 11284 Pls
8698 11689 Pls
8698 12094 Pls
8698 12498 Pls
8698 12903 Pls
8698 13308 Pls
8698 13712 Pls
8842 5619 Pls
8842 6023 Pls
8842 6428 Pls
8842 6833 Pls
8842 7237 Pls
8842 7642 Pls
8842 8047 Pls
8842 8451 Pls
8842 8856 Pls
8842 9261 Pls
8842 9666 Pls
8842 10070 Pls
8842 10475 Pls
8842 10880 Pls
8842 11284 Pls
8842 11689 Pls
8842 12094 Pls
8842 12498 Pls
8842 12903 Pls
8842 13308 Pls
8842 13712 Pls
8985 5619 Pls
8985 6023 Pls
8985 6428 Pls
8985 6833 Pls
8985 7237 Pls
8985 7642 Pls
8985 8047 Pls
8985 8451 Pls
8985 8856 Pls
8985 9261 Pls
8985 9666 Pls
8985 10070 Pls
8985 10475 Pls
8985 10880 Pls
8985 11284 Pls
8985 11689 Pls
8985 12094 Pls
8985 12498 Pls
8985 12903 Pls
8985 13308 Pls
8985 13712 Pls
9129 5214 Pls
9129 5619 Pls
9129 6023 Pls
9129 6428 Pls
9129 6833 Pls
9129 7237 Pls
9129 7642 Pls
9129 8047 Pls
9129 8451 Pls
9129 8856 Pls
9129 9261 Pls
9129 9666 Pls
9129 10070 Pls
9129 10475 Pls
9129 10880 Pls
9129 11284 Pls
9129 11689 Pls
9129 12094 Pls
9129 12498 Pls
9129 12903 Pls
9129 13308 Pls
9129 13712 Pls
9273 5214 Pls
9273 5619 Pls
9273 6023 Pls
9273 6428 Pls
9273 6833 Pls
9273 7237 Pls
9273 7642 Pls
9273 8047 Pls
9273 8451 Pls
9273 8856 Pls
9273 9261 Pls
9273 9666 Pls
9273 10070 Pls
9273 10475 Pls
9273 10880 Pls
9273 11284 Pls
9273 11689 Pls
9273 12094 Pls
9273 12498 Pls
9273 12903 Pls
9273 13308 Pls
9273 13712 Pls
9417 5214 Pls
9417 5619 Pls
9417 6023 Pls
9417 6428 Pls
9417 6833 Pls
9417 7237 Pls
9417 7642 Pls
9417 8047 Pls
9417 8451 Pls
9417 8856 Pls
9417 9261 Pls
9417 9666 Pls
9417 10070 Pls
9417 10475 Pls
9417 10880 Pls
9417 11284 Pls
9417 11689 Pls
9417 12094 Pls
9417 12498 Pls
9417 12903 Pls
9417 13308 Pls
9417 13712 Pls
9561 5214 Pls
9561 5619 Pls
9561 6023 Pls
9561 6428 Pls
9561 6833 Pls
9561 7237 Pls
9561 7642 Pls
9561 8047 Pls
9561 8451 Pls
9561 8856 Pls
9561 9261 Pls
9561 9666 Pls
9561 10070 Pls
9561 10475 Pls
9561 10880 Pls
9561 11284 Pls
9561 11689 Pls
9561 12094 Pls
9561 12498 Pls
9561 12903 Pls
9561 13308 Pls
9561 13712 Pls
9704 5214 Pls
9704 5619 Pls
9704 6023 Pls
9704 6428 Pls
9704 6833 Pls
9704 7237 Pls
9704 7642 Pls
9704 8047 Pls
9704 8451 Pls
9704 8856 Pls
9704 9261 Pls
9704 9666 Pls
9704 10070 Pls
9704 10475 Pls
9704 10880 Pls
9704 11284 Pls
9704 11689 Pls
9704 12094 Pls
9704 12498 Pls
9704 12903 Pls
9704 13308 Pls
9704 13712 Pls
9848 4809 Pls
9848 5214 Pls
9848 5619 Pls
9848 6023 Pls
9848 6428 Pls
9848 6833 Pls
9848 7237 Pls
9848 7642 Pls
9848 8047 Pls
9848 8451 Pls
9848 8856 Pls
9848 9261 Pls
9848 9666 Pls
9848 10070 Pls
9848 10475 Pls
9848 10880 Pls
9848 11284 Pls
9848 11689 Pls
9848 12094 Pls
9848 12498 Pls
9848 12903 Pls
9848 13308 Pls
9848 13712 Pls
9992 4809 Pls
9992 5214 Pls
9992 5619 Pls
9992 6023 Pls
9992 6428 Pls
9992 6833 Pls
9992 7237 Pls
9992 7642 Pls
9992 8047 Pls
9992 8451 Pls
9992 8856 Pls
9992 9261 Pls
9992 9666 Pls
9992 10070 Pls
9992 10475 Pls
9992 10880 Pls
9992 11284 Pls
9992 11689 Pls
9992 12094 Pls
9992 12498 Pls
9992 12903 Pls
9992 13308 Pls
9992 13712 Pls
10136 4809 Pls
10136 5214 Pls
10136 5619 Pls
10136 6023 Pls
10136 6428 Pls
10136 6833 Pls
10136 7237 Pls
10136 7642 Pls
10136 8047 Pls
10136 8451 Pls
10136 8856 Pls
10136 9261 Pls
10136 9666 Pls
10136 10070 Pls
10136 10475 Pls
10136 10880 Pls
10136 11284 Pls
10136 11689 Pls
10136 12094 Pls
10136 12498 Pls
10136 12903 Pls
10136 13308 Pls
10136 13712 Pls
10280 4809 Pls
10280 5214 Pls
10280 5619 Pls
10280 6023 Pls
10280 6428 Pls
10280 6833 Pls
10280 7237 Pls
10280 7642 Pls
10280 8047 Pls
10280 8451 Pls
10280 8856 Pls
10280 9261 Pls
10280 9666 Pls
10280 10070 Pls
10280 10475 Pls
10280 10880 Pls
10280 11284 Pls
10280 11689 Pls
10280 12094 Pls
10280 12498 Pls
10280 12903 Pls
10280 13308 Pls
10280 13712 Pls
10424 4809 Pls
10424 5214 Pls
10424 5619 Pls
10424 6023 Pls
10424 6428 Pls
10424 6833 Pls
10424 7237 Pls
10424 7642 Pls
10424 8047 Pls
10424 8451 Pls
10424 8856 Pls
10424 9261 Pls
10424 9666 Pls
10424 10070 Pls
10424 10475 Pls
10424 10880 Pls
10424 11284 Pls
10424 11689 Pls
10424 12094 Pls
10424 12498 Pls
10424 12903 Pls
10424 13308 Pls
10424 13712 Pls
10567 4809 Pls
10567 5214 Pls
10567 5619 Pls
10567 6023 Pls
10567 6428 Pls
10567 6833 Pls
10567 7237 Pls
10567 7642 Pls
10567 8047 Pls
10567 8451 Pls
10567 8856 Pls
10567 9261 Pls
10567 9666 Pls
10567 10070 Pls
10567 10475 Pls
10567 10880 Pls
10567 11284 Pls
10567 11689 Pls
10567 12094 Pls
10567 12498 Pls
10567 12903 Pls
10567 13308 Pls
10567 13712 Pls
10711 4809 Pls
10711 5214 Pls
10711 5619 Pls
10711 6023 Pls
10711 6428 Pls
10711 6833 Pls
10711 7237 Pls
10711 7642 Pls
10711 8047 Pls
10711 8451 Pls
10711 8856 Pls
10711 9261 Pls
10711 9666 Pls
10711 10070 Pls
10711 10475 Pls
10711 10880 Pls
10711 11284 Pls
10711 11689 Pls
10711 12094 Pls
10711 12498 Pls
10711 12903 Pls
10711 13308 Pls
10711 13712 Pls
10855 4809 Pls
10855 5214 Pls
10855 5619 Pls
10855 6023 Pls
10855 6428 Pls
10855 6833 Pls
10855 7237 Pls
10855 7642 Pls
10855 8047 Pls
10855 8451 Pls
10855 8856 Pls
10855 9261 Pls
10855 9666 Pls
10855 10070 Pls
10855 10475 Pls
10855 10880 Pls
10855 11284 Pls
10855 11689 Pls
10855 12094 Pls
10855 12498 Pls
10855 12903 Pls
10855 13308 Pls
10855 13712 Pls
10999 4809 Pls
10999 5214 Pls
10999 5619 Pls
10999 6023 Pls
10999 6428 Pls
10999 6833 Pls
10999 7237 Pls
10999 7642 Pls
10999 8047 Pls
10999 8451 Pls
10999 8856 Pls
10999 9261 Pls
10999 9666 Pls
10999 10070 Pls
10999 10475 Pls
10999 10880 Pls
10999 11284 Pls
10999 11689 Pls
10999 12094 Pls
10999 12498 Pls
10999 12903 Pls
10999 13308 Pls
10999 13712 Pls
11143 4809 Pls
11143 5214 Pls
11143 5619 Pls
11143 6023 Pls
11143 6428 Pls
11143 6833 Pls
11143 7237 Pls
11143 7642 Pls
11143 8047 Pls
11143 8451 Pls
11143 8856 Pls
11143 9261 Pls
11143 9666 Pls
11143 10070 Pls
11143 10475 Pls
11143 10880 Pls
11143 11284 Pls
11143 11689 Pls
11143 12094 Pls
11143 12498 Pls
11143 12903 Pls
11143 13308 Pls
11143 13712 Pls
11287 4809 Pls
11287 5214 Pls
11287 5619 Pls
11287 6023 Pls
11287 6428 Pls
11287 6833 Pls
11287 7237 Pls
11287 7642 Pls
11287 8047 Pls
11287 8451 Pls
11287 8856 Pls
11287 9261 Pls
11287 9666 Pls
11287 10070 Pls
11287 10475 Pls
11287 10880 Pls
11287 11284 Pls
11287 11689 Pls
11287 12094 Pls
11287 12498 Pls
11287 12903 Pls
11287 13308 Pls
11287 13712 Pls
11430 4809 Pls
11430 5214 Pls
11430 5619 Pls
11430 6023 Pls
11430 6428 Pls
11430 6833 Pls
11430 7237 Pls
11430 7642 Pls
11430 8047 Pls
11430 8451 Pls
11430 8856 Pls
11430 9261 Pls
11430 9666 Pls
11430 10070 Pls
11430 10475 Pls
11430 10880 Pls
11430 11284 Pls
11430 11689 Pls
11430 12094 Pls
11430 12498 Pls
11430 12903 Pls
11430 13308 Pls
11430 13712 Pls
11574 4809 Pls
11574 5214 Pls
11574 5619 Pls
11574 6023 Pls
11574 6428 Pls
11574 6833 Pls
11574 7237 Pls
11574 7642 Pls
11574 8047 Pls
11574 8451 Pls
11574 8856 Pls
11574 9261 Pls
11574 9666 Pls
11574 10070 Pls
11574 10475 Pls
11574 10880 Pls
11574 11284 Pls
11574 11689 Pls
11574 12094 Pls
11574 12498 Pls
11574 12903 Pls
11574 13308 Pls
11574 13712 Pls
11718 4809 Pls
11718 5214 Pls
11718 5619 Pls
11718 6023 Pls
11718 6428 Pls
11718 6833 Pls
11718 7237 Pls
11718 7642 Pls
11718 8047 Pls
11718 8451 Pls
11718 8856 Pls
11718 9261 Pls
11718 9666 Pls
11718 10070 Pls
11718 10475 Pls
11718 10880 Pls
11718 11284 Pls
11718 11689 Pls
11718 12094 Pls
11718 12498 Pls
11718 12903 Pls
11718 13308 Pls
11718 13712 Pls
11862 4809 Pls
11862 5214 Pls
11862 5619 Pls
11862 6023 Pls
11862 6428 Pls
11862 6833 Pls
11862 7237 Pls
11862 7642 Pls
11862 8047 Pls
11862 8451 Pls
11862 8856 Pls
11862 9261 Pls
11862 9666 Pls
11862 10070 Pls
11862 10475 Pls
11862 10880 Pls
11862 11284 Pls
11862 11689 Pls
11862 12094 Pls
11862 12498 Pls
11862 12903 Pls
11862 13308 Pls
11862 13712 Pls
12006 4809 Pls
12006 5214 Pls
12006 5619 Pls
12006 6023 Pls
12006 6428 Pls
12006 6833 Pls
12006 7237 Pls
12006 7642 Pls
12006 8047 Pls
12006 8451 Pls
12006 8856 Pls
12006 9261 Pls
12006 9666 Pls
12006 10070 Pls
12006 10475 Pls
12006 10880 Pls
12006 11284 Pls
12006 11689 Pls
12006 12094 Pls
12006 12498 Pls
12006 12903 Pls
12006 13308 Pls
12006 13712 Pls
12150 4809 Pls
12150 5214 Pls
12150 5619 Pls
12150 6023 Pls
12150 6428 Pls
12150 6833 Pls
12150 7237 Pls
12150 7642 Pls
12150 8047 Pls
12150 8451 Pls
12150 8856 Pls
12150 9261 Pls
12150 9666 Pls
12150 10070 Pls
12150 10475 Pls
12150 10880 Pls
12150 11284 Pls
12150 11689 Pls
12150 12094 Pls
12150 12498 Pls
12150 12903 Pls
12150 13308 Pls
12150 13712 Pls
12293 5214 Pls
12293 5619 Pls
12293 6023 Pls
12293 6428 Pls
12293 6833 Pls
12293 7237 Pls
12293 7642 Pls
12293 8047 Pls
12293 8451 Pls
12293 8856 Pls
12293 9261 Pls
12293 9666 Pls
12293 10070 Pls
12293 10475 Pls
12293 10880 Pls
12293 11284 Pls
12293 11689 Pls
12293 12094 Pls
12293 12498 Pls
12293 12903 Pls
12293 13308 Pls
12293 13712 Pls
12437 5214 Pls
12437 5619 Pls
12437 6023 Pls
12437 6428 Pls
12437 6833 Pls
12437 7237 Pls
12437 7642 Pls
12437 8047 Pls
12437 8451 Pls
12437 8856 Pls
12437 9261 Pls
12437 9666 Pls
12437 10070 Pls
12437 10475 Pls
12437 10880 Pls
12437 11284 Pls
12437 11689 Pls
12437 12094 Pls
12437 12498 Pls
12437 12903 Pls
12437 13308 Pls
12437 13712 Pls
12581 5214 Pls
12581 5619 Pls
12581 6023 Pls
12581 6428 Pls
12581 6833 Pls
12581 7237 Pls
12581 7642 Pls
12581 8047 Pls
12581 8451 Pls
12581 8856 Pls
12581 9261 Pls
12581 9666 Pls
12581 10070 Pls
12581 10475 Pls
12581 10880 Pls
12581 11284 Pls
12581 11689 Pls
12581 12094 Pls
12581 12498 Pls
12581 12903 Pls
12581 13308 Pls
12581 13712 Pls
12725 5214 Pls
12725 5619 Pls
12725 6023 Pls
12725 6428 Pls
12725 6833 Pls
12725 7237 Pls
12725 7642 Pls
12725 8047 Pls
12725 8451 Pls
12725 8856 Pls
12725 9261 Pls
12725 9666 Pls
12725 10070 Pls
12725 10475 Pls
12725 10880 Pls
12725 11284 Pls
12725 11689 Pls
12725 12094 Pls
12725 12498 Pls
12725 12903 Pls
12725 13308 Pls
12725 13712 Pls
12869 5619 Pls
12869 6023 Pls
12869 6428 Pls
12869 6833 Pls
12869 7237 Pls
12869 7642 Pls
12869 8047 Pls
12869 8451 Pls
12869 8856 Pls
12869 9261 Pls
12869 9666 Pls
12869 10070 Pls
12869 10475 Pls
12869 10880 Pls
12869 11284 Pls
12869 11689 Pls
12869 12094 Pls
12869 12498 Pls
12869 12903 Pls
12869 13308 Pls
12869 13712 Pls
13012 5619 Pls
13012 6023 Pls
13012 6428 Pls
13012 6833 Pls
13012 7237 Pls
13012 7642 Pls
13012 8047 Pls
13012 8451 Pls
13012 8856 Pls
13012 9261 Pls
13012 9666 Pls
13012 10070 Pls
13012 10475 Pls
13012 10880 Pls
13012 11284 Pls
13012 11689 Pls
13012 12094 Pls
13012 12498 Pls
13012 12903 Pls
13012 13308 Pls
13012 13712 Pls
13156 5619 Pls
13156 6023 Pls
13156 6428 Pls
13156 6833 Pls
13156 7237 Pls
13156 7642 Pls
13156 8047 Pls
13156 8451 Pls
13156 8856 Pls
13156 9261 Pls
13156 9666 Pls
13156 10070 Pls
13156 10475 Pls
13156 10880 Pls
13156 11284 Pls
13156 11689 Pls
13156 12094 Pls
13156 12498 Pls
13156 12903 Pls
13156 13308 Pls
13156 13712 Pls
13300 6023 Pls
13300 6428 Pls
13300 6833 Pls
13300 7237 Pls
13300 7642 Pls
13300 8047 Pls
13300 8451 Pls
13300 8856 Pls
13300 9261 Pls
13300 9666 Pls
13300 10070 Pls
13300 10475 Pls
13300 10880 Pls
13300 11284 Pls
13300 11689 Pls
13300 12094 Pls
13300 12498 Pls
13300 12903 Pls
13300 13308 Pls
13300 13712 Pls
13444 6023 Pls
13444 6428 Pls
13444 6833 Pls
13444 7237 Pls
13444 7642 Pls
13444 8047 Pls
13444 8451 Pls
13444 8856 Pls
13444 9261 Pls
13444 9666 Pls
13444 10070 Pls
13444 10475 Pls
13444 10880 Pls
13444 11284 Pls
13444 11689 Pls
13444 12094 Pls
13444 12498 Pls
13444 12903 Pls
13444 13308 Pls
13444 13712 Pls
13588 6023 Pls
13588 6428 Pls
13588 6833 Pls
13588 7237 Pls
13588 7642 Pls
13588 8047 Pls
13588 8451 Pls
13588 8856 Pls
13588 9261 Pls
13588 9666 Pls
13588 10070 Pls
13588 10475 Pls
13588 10880 Pls
13588 11284 Pls
13588 11689 Pls
13588 12094 Pls
13588 12498 Pls
13588 12903 Pls
13588 13308 Pls
13588 13712 Pls
13732 6428 Pls
13732 6833 Pls
13732 7237 Pls
13732 7642 Pls
13732 8047 Pls
13732 8451 Pls
13732 8856 Pls
13732 9261 Pls
13732 9666 Pls
13732 10070 Pls
13732 10475 Pls
13732 10880 Pls
13732 11284 Pls
13732 11689 Pls
13732 12094 Pls
13732 12498 Pls
13732 12903 Pls
13732 13308 Pls
13732 13712 Pls
13875 6428 Pls
13875 6833 Pls
13875 7237 Pls
13875 7642 Pls
13875 8047 Pls
13875 8451 Pls
13875 8856 Pls
13875 9261 Pls
13875 9666 Pls
13875 10070 Pls
13875 10475 Pls
13875 10880 Pls
13875 11284 Pls
13875 11689 Pls
13875 12094 Pls
13875 12498 Pls
13875 12903 Pls
13875 13308 Pls
13875 13712 Pls
14019 6833 Pls
14019 7237 Pls
14019 7642 Pls
14019 8047 Pls
14019 8451 Pls
14019 8856 Pls
14019 9261 Pls
14019 9666 Pls
14019 10070 Pls
14019 10475 Pls
14019 10880 Pls
14019 11284 Pls
14019 11689 Pls
14019 12094 Pls
14019 12498 Pls
14019 12903 Pls
14019 13308 Pls
14019 13712 Pls
14163 6833 Pls
14163 7237 Pls
14163 7642 Pls
14163 8047 Pls
14163 8451 Pls
14163 8856 Pls
14163 9261 Pls
14163 9666 Pls
14163 10070 Pls
14163 10475 Pls
14163 10880 Pls
14163 11284 Pls
14163 11689 Pls
14163 12094 Pls
14163 12498 Pls
14163 12903 Pls
14163 13308 Pls
14163 13712 Pls
14307 7237 Pls
14307 7642 Pls
14307 8047 Pls
14307 8451 Pls
14307 8856 Pls
14307 9261 Pls
14307 9666 Pls
14307 10070 Pls
14307 10475 Pls
14307 10880 Pls
14307 11284 Pls
14307 11689 Pls
14307 12094 Pls
14307 12498 Pls
14307 12903 Pls
14307 13308 Pls
14307 13712 Pls
14451 7237 Pls
14451 7642 Pls
14451 8047 Pls
14451 8451 Pls
14451 8856 Pls
14451 9261 Pls
14451 9666 Pls
14451 10070 Pls
14451 10475 Pls
14451 10880 Pls
14451 11284 Pls
14451 11689 Pls
14451 12094 Pls
14451 12498 Pls
14451 12903 Pls
14451 13308 Pls
14451 13712 Pls
14595 7642 Pls
14595 8047 Pls
14595 8451 Pls
14595 8856 Pls
14595 9261 Pls
14595 9666 Pls
14595 10070 Pls
14595 10475 Pls
14595 10880 Pls
14595 11284 Pls
14595 11689 Pls
14595 12094 Pls
14595 12498 Pls
14595 12903 Pls
14595 13308 Pls
14595 13712 Pls
14738 7642 Pls
14738 8047 Pls
14738 8451 Pls
14738 8856 Pls
14738 9261 Pls
14738 9666 Pls
14738 10070 Pls
14738 10475 Pls
14738 10880 Pls
14738 11284 Pls
14738 11689 Pls
14738 12094 Pls
14738 12498 Pls
14738 12903 Pls
14738 13308 Pls
14738 13712 Pls
14882 8047 Pls
14882 8451 Pls
14882 8856 Pls
14882 9261 Pls
14882 9666 Pls
14882 10070 Pls
14882 10475 Pls
14882 10880 Pls
14882 11284 Pls
14882 11689 Pls
14882 12094 Pls
14882 12498 Pls
14882 12903 Pls
14882 13308 Pls
14882 13712 Pls
15026 8047 Pls
15026 8451 Pls
15026 8856 Pls
15026 9261 Pls
15026 9666 Pls
15026 10070 Pls
15026 10475 Pls
15026 10880 Pls
15026 11284 Pls
15026 11689 Pls
15026 12094 Pls
15026 12498 Pls
15026 12903 Pls
15026 13308 Pls
15026 13712 Pls
15170 8451 Pls
15170 8856 Pls
15170 9261 Pls
15170 9666 Pls
15170 10070 Pls
15170 10475 Pls
15170 10880 Pls
15170 11284 Pls
15170 11689 Pls
15170 12094 Pls
15170 12498 Pls
15170 12903 Pls
15170 13308 Pls
15170 13712 Pls
15314 8856 Pls
15314 9261 Pls
15314 9666 Pls
15314 10070 Pls
15314 10475 Pls
15314 10880 Pls
15314 11284 Pls
15314 11689 Pls
15314 12094 Pls
15314 12498 Pls
15314 12903 Pls
15314 13308 Pls
15314 13712 Pls
15458 8856 Pls
15458 9261 Pls
15458 9666 Pls
15458 10070 Pls
15458 10475 Pls
15458 10880 Pls
15458 11284 Pls
15458 11689 Pls
15458 12094 Pls
15458 12498 Pls
15458 12903 Pls
15458 13308 Pls
15458 13712 Pls
15601 9261 Pls
15601 9666 Pls
15601 10070 Pls
15601 10475 Pls
15601 10880 Pls
15601 11284 Pls
15601 11689 Pls
15601 12094 Pls
15601 12498 Pls
15601 12903 Pls
15601 13308 Pls
15601 13712 Pls
15745 9261 Pls
15745 9666 Pls
15745 10070 Pls
15745 10475 Pls
15745 10880 Pls
15745 11284 Pls
15745 11689 Pls
15745 12094 Pls
15745 12498 Pls
15745 12903 Pls
15745 13308 Pls
15745 13712 Pls
15889 9666 Pls
15889 10070 Pls
15889 10475 Pls
15889 10880 Pls
15889 11284 Pls
15889 11689 Pls
15889 12094 Pls
15889 12498 Pls
15889 12903 Pls
15889 13308 Pls
15889 13712 Pls
16033 10070 Pls
16033 10475 Pls
16033 10880 Pls
16033 11284 Pls
16033 11689 Pls
16033 12094 Pls
16033 12498 Pls
16033 12903 Pls
16033 13308 Pls
16033 13712 Pls
16177 10475 Pls
16177 10880 Pls
16177 11284 Pls
16177 11689 Pls
16177 12094 Pls
16177 12498 Pls
16177 12903 Pls
16177 13308 Pls
16177 13712 Pls
16320 10475 Pls
16320 10880 Pls
16320 11284 Pls
16320 11689 Pls
16320 12094 Pls
16320 12498 Pls
16320 12903 Pls
16320 13308 Pls
16320 13712 Pls
16464 10880 Pls
16464 11284 Pls
16464 11689 Pls
16464 12094 Pls
16464 12498 Pls
16464 12903 Pls
16464 13308 Pls
16464 13712 Pls
16608 11284 Pls
16608 11689 Pls
16608 12094 Pls
16608 12498 Pls
16608 12903 Pls
16608 13308 Pls
16608 13712 Pls
16752 11284 Pls
16752 11689 Pls
16752 12094 Pls
16752 12498 Pls
16752 12903 Pls
16752 13308 Pls
16752 13712 Pls
16896 11689 Pls
16896 12094 Pls
16896 12498 Pls
16896 12903 Pls
16896 13308 Pls
16896 13712 Pls
17040 12094 Pls
17040 12498 Pls
17040 12903 Pls
17040 13308 Pls
17040 13712 Pls
17183 12498 Pls
17183 12903 Pls
17183 13308 Pls
17183 13712 Pls
17327 12903 Pls
17327 13308 Pls
17327 13712 Pls
17471 13308 Pls
17471 13712 Pls
17615 13308 Pls
17615 13712 Pls
17759 13712 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
4800 14117 N
0 -10117 V
14397 0 V
0 10117 V
-14397 0 V
Z stroke
5.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
