%!PS-Adobe-2.0 EPSF-2.0
%%Title: a0=5_b0=0.18_k0=0.095_k1=0.07_n=1.eps
%%Creator: gnuplot 5.4 patchlevel 2
%%CreationDate: Mon Feb 12 15:41:01 2024
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 1130 806
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 30.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -266 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 1130 50 lineto 1130 806 lineto 50 806 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (a0=5_b0=0.18_k0=0.095_k1=0.07_n=1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Feb 12 15:41:01 2024)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 800 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 21600.00 15120.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
3840 3200 M
126 0 V
stroke
3360 3200 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0)]
] -266.7 MRshow
/Helvetica findfont 800 scalefont setfont
/vshift -266 def
1.000 UL
LTb
LCb setrgbcolor
3840 4390 M
126 0 V
stroke
3360 4390 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 2)]
] -266.7 MRshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3840 5579 M
126 0 V
stroke
3360 5579 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 4)]
] -266.7 MRshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3840 6769 M
126 0 V
stroke
3360 6769 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 6)]
] -266.7 MRshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3840 7959 M
126 0 V
stroke
3360 7959 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 8)]
] -266.7 MRshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3840 9148 M
126 0 V
stroke
3360 9148 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 10)]
] -266.7 MRshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3840 10338 M
126 0 V
stroke
3360 10338 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 12)]
] -266.7 MRshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3840 11527 M
126 0 V
stroke
3360 11527 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 14)]
] -266.7 MRshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3840 12717 M
126 0 V
stroke
3360 12717 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 16)]
] -266.7 MRshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3840 3200 M
0 126 V
stroke
3840 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5424 3200 M
0 126 V
stroke
5424 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0.1)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
7007 3200 M
0 126 V
stroke
7007 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0.2)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
8591 3200 M
0 126 V
stroke
8591 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0.3)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
10175 3200 M
0 126 V
stroke
10175 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0.4)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
11759 3200 M
0 126 V
stroke
11759 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0.5)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
13342 3200 M
0 126 V
stroke
13342 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0.6)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
14926 3200 M
0 126 V
stroke
14926 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0.7)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
16510 3200 M
0 126 V
stroke
16510 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0.8)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
18093 3200 M
0 126 V
stroke
18093 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0.9)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
19677 3200 M
0 126 V
stroke
19677 2400 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 1)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
3840 12717 N
0 -9517 V
15837 0 V
0 9517 V
-15837 0 V
Z stroke
8.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
1800 7958 M
[ [(Helvetica) 800.0 0.0 true true 0 (fp)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
LTb
LCb setrgbcolor
11758 1200 M
[ [(Symbol) 800.0 0.0 true true 0 (a)]
] -266.7 MCshow
/Helvetica findfont 800 scalefont setfont
LTb
% Begin plot #1
8.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
19677 6174 Pls
18093 5706 Pls
16510 5649 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
14926 6545 Pls
14926 5774 Pls
14926 5639 Pls
13342 5427 Pls
13342 5656 Pls
13342 5797 Pls
13342 5640 Pls
13342 6525 Pls
13342 5402 Pls
13342 5726 Pls
13342 6543 Pls
13342 5402 Pls
13342 5709 Pls
13342 6412 Pls
13342 5445 Pls
13342 5629 Pls
13342 5588 Pls
13342 5597 Pls
13342 5596 Pls
13342 5595 Pls
13342 5604 Pls
13342 5627 Pls
13342 5649 Pls
13342 6297 Pls
13342 5480 Pls
13342 5684 Pls
13342 5635 Pls
13342 6284 Pls
13342 5483 Pls
13342 5693 Pls
13342 5636 Pls
13342 6314 Pls
13342 5472 Pls
13342 5656 Pls
13342 5628 Pls
13342 6117 Pls
13342 5541 Pls
13342 6062 Pls
13342 5550 Pls
13342 6076 Pls
13342 5546 Pls
13342 6056 Pls
13342 5552 Pls
13342 6095 Pls
13342 5540 Pls
13342 6015 Pls
13342 5565 Pls
13342 6173 Pls
13342 5515 Pls
13342 5845 Pls
13342 5612 Pls
13342 6376 Pls
13342 5446 Pls
11759 6691 Pls
11759 5408 Pls
11759 5620 Pls
11759 5569 Pls
11759 5720 Pls
11759 6823 Pls
11759 5399 Pls
11759 5616 Pls
11759 5560 Pls
11759 5667 Pls
11759 6414 Pls
11759 5597 Pls
11759 6722 Pls
11759 5422 Pls
11759 5598 Pls
11759 5628 Pls
11759 5978 Pls
11759 5730 Pls
11759 7271 Pls
11759 5287 Pls
11759 5936 Pls
11759 8379 Pls
11759 5524 Pls
11759 7005 Pls
11759 5329 Pls
11759 5931 Pls
11759 8439 Pls
11759 5549 Pls
11759 7162 Pls
11759 5315 Pls
11759 5978 Pls
11759 8991 Pls
11759 5885 Pls
11759 5439 Pls
11759 6712 Pls
11759 4688 Pls
11759 8802 Pls
11759 5595 Pls
11759 8189 Pls
11759 5400 Pls
11759 6426 Pls
11759 5537 Pls
11759 6303 Pls
11759 5615 Pls
11759 6766 Pls
11759 5402 Pls
11759 5619 Pls
11759 5565 Pls
11759 5708 Pls
11759 6747 Pls
10175 3888 Pls
10175 6640 Pls
10175 4658 Pls
10175 6010 Pls
10175 5752 Pls
10175 7602 Pls
10175 5342 Pls
10175 5577 Pls
10175 5650 Pls
10175 6413 Pls
10175 5801 Pls
10175 8583 Pls
10175 5613 Pls
10175 7877 Pls
10175 5352 Pls
10175 5671 Pls
10175 5881 Pls
10175 8732 Pls
10175 5692 Pls
10175 8868 Pls
10175 5716 Pls
10175 9339 Pls
10175 5953 Pls
10175 4421 Pls
10175 6974 Pls
10175 4799 Pls
10175 11034 Pls
10175 6978 Pls
10175 4801 Pls
10175 3880 Pls
10175 7150 Pls
10175 4874 Pls
10175 6410 Pls
10175 7424 Pls
10175 4990 Pls
10175 3958 Pls
10175 6825 Pls
10175 5334 Pls
10175 6013 Pls
10175 8984 Pls
10175 6346 Pls
10175 4533 Pls
10175 6454 Pls
10175 5548 Pls
10175 6480 Pls
10175 5752 Pls
10175 8012 Pls
10175 5407 Pls
10175 6309 Pls
10175 5781 Pls
8591 5520 Pls
8591 4183 Pls
8591 3617 Pls
8591 8251 Pls
8591 5373 Pls
8591 6738 Pls
8591 5831 Pls
8591 9570 Pls
8591 6122 Pls
8591 4438 Pls
8591 5957 Pls
8591 8107 Pls
8591 5561 Pls
8591 7349 Pls
8591 5498 Pls
8591 6751 Pls
8591 5874 Pls
8591 9648 Pls
8591 6491 Pls
8591 4594 Pls
8591 7564 Pls
8591 5262 Pls
8591 5812 Pls
8591 7581 Pls
8591 5522 Pls
8591 7005 Pls
8591 5726 Pls
8591 8279 Pls
8591 5544 Pls
8591 7343 Pls
8591 5494 Pls
8591 6705 Pls
8591 5894 Pls
8591 9223 Pls
8591 6631 Pls
8591 4654 Pls
8591 9451 Pls
8591 5883 Pls
8591 4424 Pls
8591 7211 Pls
8591 4900 Pls
8591 3921 Pls
8591 6914 Pls
8591 4774 Pls
8591 8713 Pls
8591 5588 Pls
8591 8235 Pls
8591 5507 Pls
8591 7153 Pls
8591 5592 Pls
7007 5558 Pls
7007 7464 Pls
7007 5723 Pls
7007 8865 Pls
7007 5793 Pls
7007 9221 Pls
7007 6960 Pls
7007 4793 Pls
7007 3882 Pls
7007 7700 Pls
7007 5107 Pls
7007 4008 Pls
7007 7181 Pls
7007 5370 Pls
7007 5527 Pls
7007 5635 Pls
7007 6675 Pls
7007 6224 Pls
7007 4482 Pls
7007 5890 Pls
7007 7978 Pls
7007 5695 Pls
7007 8832 Pls
7007 5776 Pls
7007 9916 Pls
7007 6807 Pls
7007 4728 Pls
7007 5326 Pls
7007 8108 Pls
7007 5279 Pls
7007 4081 Pls
7007 3573 Pls
7007 7186 Pls
7007 4889 Pls
7007 4441 Pls
7007 8108 Pls
7007 5280 Pls
7007 4081 Pls
7007 3574 Pls
7007 7836 Pls
7007 5164 Pls
7007 4032 Pls
7007 7923 Pls
7007 5323 Pls
7007 5528 Pls
7007 6167 Pls
7007 4476 Pls
7007 6963 Pls
7007 4794 Pls
7007 11755 Pls
5424 5067 Pls
5424 3991 Pls
5424 7424 Pls
5424 5439 Pls
5424 6211 Pls
5424 6547 Pls
5424 4618 Pls
5424 7464 Pls
5424 5569 Pls
5424 7709 Pls
5424 5950 Pls
5424 4669 Pls
5424 7653 Pls
5424 5087 Pls
5424 3999 Pls
5424 8424 Pls
5424 5505 Pls
5424 7759 Pls
5424 5831 Pls
5424 9887 Pls
5424 7060 Pls
5424 4836 Pls
5424 3893 Pls
5424 6367 Pls
5424 4545 Pls
5424 6518 Pls
5424 4606 Pls
5424 6017 Pls
5424 6381 Pls
5424 4548 Pls
5424 5979 Pls
5424 6372 Pls
5424 4544 Pls
5424 5830 Pls
5424 6371 Pls
5424 4544 Pls
5424 5722 Pls
5424 6342 Pls
5424 4531 Pls
5424 5584 Pls
5424 5869 Pls
5424 9597 Pls
5424 6172 Pls
5424 4459 Pls
5424 5631 Pls
5424 5533 Pls
5424 5430 Pls
5424 6201 Pls
5424 4478 Pls
5424 6795 Pls
3840 8074 Pls
3840 5265 Pls
3840 4075 Pls
3840 3571 Pls
3840 5902 Pls
3840 8522 Pls
3840 6189 Pls
3840 4466 Pls
3840 5688 Pls
3840 6030 Pls
3840 6909 Pls
3840 4771 Pls
3840 4306 Pls
3840 8759 Pls
3840 5555 Pls
3840 4198 Pls
3840 3623 Pls
3840 10514 Pls
3840 6322 Pls
3840 4523 Pls
3840 7271 Pls
3840 5915 Pls
3840 5587 Pls
3840 7857 Pls
3840 5173 Pls
3840 4036 Pls
3840 7669 Pls
3840 9120 Pls
3840 5708 Pls
3840 4263 Pls
3840 3650 Pls
3840 3391 Pls
3840 7159 Pls
3840 4878 Pls
3840 4253 Pls
3840 8677 Pls
3840 5521 Pls
3840 4183 Pls
3840 3617 Pls
3840 8538 Pls
3840 5564 Pls
3840 8583 Pls
3840 5910 Pls
3840 4604 Pls
3840 7927 Pls
3840 5203 Pls
3840 4049 Pls
3840 6190 Pls
3840 9222 Pls
3840 5751 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
3840 12717 N
0 -9517 V
15837 0 V
0 9517 V
-15837 0 V
Z stroke
8.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
11758 13917 M
[ [(Helvetica) 800.0 0.0 true true 0 (a0=5)]
[(Helvetica) 640.0 -240.0 true true 0 (b)]
[(Helvetica) 800.0 0.0 true true 0 (0=0.18)]
[(Helvetica) 640.0 -240.0 true true 0 (k)]
[(Helvetica) 800.0 0.0 true true 0 (0=0.095)]
[(Helvetica) 640.0 -240.0 true true 0 (k)]
[(Helvetica) 800.0 0.0 true true 0 (1=0.07)]
[(Helvetica) 640.0 -240.0 true true 0 (n)]
[(Helvetica) 800.0 0.0 true true 0 (=1)]
] -186.7 MCshow
/Helvetica findfont 800 scalefont setfont
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
